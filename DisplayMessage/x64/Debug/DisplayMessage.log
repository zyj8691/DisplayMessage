生成启动时间为 2018/3/1 星期四 下午 7:49:22。
     1>项目“C:\Users\Administrator\Desktop\DisplayMessage\DisplayMessage\DisplayMessage.vcxproj”在节点 2 上(Build 个目标)。
     1>CustomBuild:
         Moc'ing displaymessage.h...
     1>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V120\Microsoft.CppBuild.targets(935,5): warning MSB8027: Two or more files with the name of moc_displaymessage.cpp will produce outputs to the same location. This can lead to an incorrect build result.  The files involved are GeneratedFiles\Debug\moc_displaymessage.cpp, GeneratedFiles\Release\moc_displaymessage.cpp.
       ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\x86_amd64\CL.exe /c /I.\GeneratedFiles /I. /IC:\Qt\Qt5.6.3\5.6.3\msvc2013_64\include /I.\GeneratedFiles\Debug /IC:\Qt\Qt5.6.3\5.6.3\msvc2013_64\include\QtCore /IC:\Qt\Qt5.6.3\5.6.3\msvc2013_64\include\QtGui /IC:\Qt\Qt5.6.3\5.6.3\msvc2013_64\include\QtWidgets /I"E:\MVTec\HALCON-12.0\include\halconcpp" /I"E:\MVTec\HALCON-12.0\include" /ID:\opencv\build\include\opencv2 /ID:\opencv\build\include\opencv /ID:\opencv\build\include /I"C:\Program Files\PCL 1.8.0\include\pcl-1.8" /I"C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59" /I"C:\Program Files\PCL 1.8.0\3rdParty\Eigen\eigen3" /I"C:\Program Files\PCL 1.8.0\3rdParty\FLANN\include" /I"C:\Program Files\PCL 1.8.0\3rdParty\OpenNI2\Include" /I"C:\Program Files\PCL 1.8.0\3rdParty\Qhull\include" /I"C:\Program Files\PCL 1.8.0\3rdParty\VTK\include\vtk-7.0" /Zi /nologo /W1 /WX- /Od /D UNICODE /D WIN32 /D WIN64 /D QT_DLL /D QT_CORE_LIB /D QT_GUI_LIB /D QT_WIDGETS_LIB /Gm- /EHsc /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"x64\Debug\\" /Fd"x64\Debug\vc120.pdb" /Gd /TP /errorReport:prompt GeneratedFiles\Debug\moc_displaymessage.cpp displaymessage.cpp main.cpp
         moc_displaymessage.cpp
     1>C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(348): warning C4996: 'std::_Uninitialized_copy0': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(333) : 参见“std::_Uninitialized_copy0”的声明
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(191): 参见对正在编译的函数 模板 实例化“_FwdIt std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
                 with
                 [
                     _FwdIt=boost::shared_ptr<void> *
         ,            I=boost::shared_ptr<void> *
         ,            _InIt=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(281): 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”时
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(303): 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(53): 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(55): 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用
         displaymessage.cpp
     1>C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(348): warning C4996: 'std::_Uninitialized_copy0': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(333) : 参见“std::_Uninitialized_copy0”的声明
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(191): 参见对正在编译的函数 模板 实例化“_FwdIt std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
                 with
                 [
                     _FwdIt=boost::shared_ptr<void> *
         ,            I=boost::shared_ptr<void> *
         ,            _InIt=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(281): 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”时
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(303): 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(53): 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(55): 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用
         main.cpp
     1>C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(348): warning C4996: 'std::_Uninitialized_copy0': Function call with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
                 C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\include\xmemory(333) : 参见“std::_Uninitialized_copy0”的声明
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(191): 参见对正在编译的函数 模板 实例化“_FwdIt std::uninitialized_copy<I,boost::shared_ptr<void>*>(_InIt,_InIt,_FwdIt)”的引用
                 with
                 [
                     _FwdIt=boost::shared_ptr<void> *
         ,            I=boost::shared_ptr<void> *
         ,            _InIt=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(178): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_rai<I,false>(I,I,boost::shared_ptr<void> *,const boost::integral_constant<bool,false> &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(204): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<I>(I,I,boost::shared_ptr<void> *,std::random_access_iterator_tag)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(288): 参见对正在编译的函数 模板 实例化“void boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::copy_impl<boost::shared_ptr<void>*>(I,I,boost::shared_ptr<void> *)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
         ,            I=boost::shared_ptr<void> *
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(281): 编译类 模板 成员函数“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”时
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/detail/auto_buffer.hpp(303): 参见对正在编译的函数 模板 实例化“boost::shared_ptr<void> *boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>::move_to_new_buffer(unsigned __int64,const boost::false_type &)”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(53): 参见对正在编译的类 模板 实例化“boost::signals2::detail::auto_buffer<boost::shared_ptr<void>,boost::signals2::detail::store_n_objects<10>,boost::signals2::detail::default_grow_policy,std::allocator<T>>”的引用
                 with
                 [
                     T=boost::shared_ptr<void>
                 ]
                 C:\Program Files\PCL 1.8.0\3rdParty\Boost\include\boost-1_59\boost/signals2/connection.hpp(55): 参见对正在编译的类 模板 实例化“boost::signals2::detail::garbage_collecting_lock<Mutex>”的引用
         正在生成代码...
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\bin\x86_amd64\link.exe /ERRORREPORT:PROMPT /OUT:"C:\Users\Administrator\Desktop\DisplayMessage\x64\Debug\\DisplayMessage.exe" /NOLOGO /LIBPATH:C:\Qt\Qt5.6.3\5.6.3\msvc2013_64\lib /LIBPATH:"E:\MVTec\HALCON-12.0\lib\x64-win64" /LIBPATH:D:\opencv\build\x64\vc12\lib /LIBPATH:"C:\Program Files\PCL 1.8.0\lib" /LIBPATH:"C:\Program Files\PCL 1.8.0\3rdParty\Boost\lib" /LIBPATH:"C:\Program Files\PCL 1.8.0\3rdParty\OpenNI2\Lib" /LIBPATH:"C:\Program Files\PCL 1.8.0\3rdParty\FLANN\lib" /LIBPATH:"C:\Program Files\PCL 1.8.0\3rdParty\Qhull\lib" /LIBPATH:"C:\Program Files\PCL 1.8.0\3rdParty\VTK\lib" qtmaind.lib Qt5Cored.lib Qt5Guid.lib Qt5Widgetsd.lib pcl_common_debug.lib pcl_features_debug.lib pcl_filters_debug.lib pcl_io_debug.lib pcl_io_ply_debug.lib pcl_kdtree_debug.lib pcl_keypoints_debug.lib pcl_ml_debug.lib pcl_octree_debug.lib pcl_outofcore_debug.lib pcl_people_debug.lib pcl_recognition_debug.lib pcl_registration_debug.lib pcl_sample_consensus_debug.lib pcl_search_debug.lib pcl_segmentation_debug.lib pcl_stereo_debug.lib pcl_surface_debug.lib pcl_tracking_debug.lib pcl_visualization_debug.lib "libboost_atomic-vc120-mt-gd-1_59.lib" "libboost_chrono-vc120-mt-gd-1_59.lib" "libboost_container-vc120-mt-gd-1_59.lib" "libboost_context-vc120-mt-gd-1_59.lib" "libboost_coroutine-vc120-mt-gd-1_59.lib" "libboost_date_time-vc120-mt-gd-1_59.lib" "libboost_exception-vc120-mt-gd-1_59.lib" "libboost_filesystem-vc120-mt-gd-1_59.lib" "libboost_graph-vc120-mt-gd-1_59.lib" "libboost_iostreams-vc120-mt-gd-1_59.lib" "libboost_locale-vc120-mt-gd-1_59.lib" "libboost_log-vc120-mt-gd-1_59.lib" "libboost_log_setup-vc120-mt-gd-1_59.lib" "libboost_math_c99-vc120-mt-gd-1_59.lib" "libboost_math_c99f-vc120-mt-gd-1_59.lib" "libboost_math_c99l-vc120-mt-gd-1_59.lib" "libboost_math_tr1-vc120-mt-gd-1_59.lib" "libboost_math_tr1f-vc120-mt-gd-1_59.lib" "libboost_math_tr1l-vc120-mt-gd-1_59.lib" "libboost_mpi-vc120-mt-gd-1_59.lib" "libboost_prg_exec_monitor-vc120-mt-gd-1_59.lib" "libboost_program_options-vc120-mt-gd-1_59.lib" "libboost_random-vc120-mt-gd-1_59.lib" "libboost_regex-vc120-mt-gd-1_59.lib" "libboost_serialization-vc120-mt-gd-1_59.lib" "libboost_signals-vc120-mt-gd-1_59.lib" "libboost_system-vc120-mt-gd-1_59.lib" "libboost_test_exec_monitor-vc120-mt-gd-1_59.lib" "libboost_thread-vc120-mt-gd-1_59.lib" "libboost_timer-vc120-mt-gd-1_59.lib" "libboost_unit_test_framework-vc120-mt-gd-1_59.lib" "libboost_wave-vc120-mt-gd-1_59.lib" "libboost_wserialization-vc120-mt-gd-1_59.lib" "vtkalglib-7.0-gd.lib" "vtkChartsCore-7.0-gd.lib" "vtkCommonCore-7.0-gd.lib" "vtkCommonColor-7.0-gd.lib" "vtkCommonComputationalGeometry-7.0-gd.lib" "vtkCommonDataModel-7.0-gd.lib" "vtkCommonExecutionModel-7.0-gd.lib" "vtkCommonMath-7.0-gd.lib" "vtkCommonMisc-7.0-gd.lib" "vtkCommonSystem-7.0-gd.lib" "vtkCommonTransforms-7.0-gd.lib" "vtkDICOMParser-7.0-gd.lib" "vtkDomainsChemistry-7.0-gd.lib" "vtkexoIIc-7.0-gd.lib" "vtkexpat-7.0-gd.lib" "vtkFiltersAMR-7.0-gd.lib" "vtkFiltersCore-7.0-gd.lib" "vtkFiltersExtraction-7.0-gd.lib" "vtkFiltersFlowPaths-7.0-gd.lib" "vtkFiltersGeneral-7.0-gd.lib" "vtkFiltersGeneric-7.0-gd.lib" "vtkFiltersGeometry-7.0-gd.lib" "vtkFiltersHybrid-7.0-gd.lib" "vtkFiltersHyperTree-7.0-gd.lib" "vtkFiltersImaging-7.0-gd.lib" "vtkFiltersModeling-7.0-gd.lib" "vtkFiltersParallel-7.0-gd.lib" "vtkFiltersParallelImaging-7.0-gd.lib" "vtkFiltersProgrammable-7.0-gd.lib" "vtkFiltersSelection-7.0-gd.lib" "vtkFiltersSMP-7.0-gd.lib" "vtkFiltersSources-7.0-gd.lib" "vtkFiltersStatistics-7.0-gd.lib" "vtkFiltersTexture-7.0-gd.lib" "vtkFiltersVerdict-7.0-gd.lib" "vtkfreetype-7.0-gd.lib" "vtkGeovisCore-7.0-gd.lib" "vtkhdf5-7.0-gd.lib" "vtkhdf5_hl-7.0-gd.lib" "vtkImagingColor-7.0-gd.lib" "vtkImagingCore-7.0-gd.lib" "vtkImagingFourier-7.0-gd.lib" "vtkImagingGeneral-7.0-gd.lib" "vtkImagingHybrid-7.0-gd.lib" "vtkImagingMath-7.0-gd.lib" "vtkImagingMorphological-7.0-gd.lib" "vtkImagingSources-7.0-gd.lib" "vtkImagingStatistics-7.0-gd.lib" "vtkImagingStencil-7.0-gd.lib" "vtkInfovisCore-7.0-gd.lib" "vtkInfovisLayout-7.0-gd.lib" "vtkInteractionImage-7.0-gd.lib" "vtkInteractionStyle-7.0-gd.lib" "vtkInteractionWidgets-7.0-gd.lib" "vtkIOAMR-7.0-gd.lib" "vtkIOCore-7.0-gd.lib" "vtkIOEnSight-7.0-gd.lib" "vtkIOExodus-7.0-gd.lib" "vtkIOExport-7.0-gd.lib" "vtkIOGeometry-7.0-gd.lib" "vtkIOImage-7.0-gd.lib" "vtkIOImport-7.0-gd.lib" "vtkIOInfovis-7.0-gd.lib" "vtkIOLegacy-7.0-gd.lib" "vtkIOLSDyna-7.0-gd.lib" "vtkIOMINC-7.0-gd.lib" "vtkIOMovie-7.0-gd.lib" "vtkIONetCDF-7.0-gd.lib" "vtkIOParallel-7.0-gd.lib" "vtkIOParallelXML-7.0-gd.lib" "vtkIOPLY-7.0-gd.lib" "vtkIOSQL-7.0-gd.lib" "vtkIOVideo-7.0-gd.lib" "vtkIOXML-7.0-gd.lib" "vtkIOXMLParser-7.0-gd.lib" "vtkjpeg-7.0-gd.lib" "vtkjsoncpp-7.0-gd.lib" "vtklibxml2-7.0-gd.lib" "vtkmetaio-7.0-gd.lib" "vtkNetCDF-7.0-gd.lib" "vtkNetCDF_cxx-7.0-gd.lib" "vtkoggtheora-7.0-gd.lib" "vtkParallelCore-7.0-gd.lib" "vtkpng-7.0-gd.lib" "vtkproj4-7.0-gd.lib" "vtkRenderingAnnotation-7.0-gd.lib" "vtkRenderingContext2D-7.0-gd.lib" "vtkRenderingContextOpenGL2-7.0-gd.lib" "vtkRenderingCore-7.0-gd.lib" "vtkRenderingFreeType-7.0-gd.lib" "vtkRenderingImage-7.0-gd.lib" "vtkRenderingLabel-7.0-gd.lib" "vtkRenderingLOD-7.0-gd.lib" "vtkRenderingOpenGL2-7.0-gd.lib" "vtkRenderingVolume-7.0-gd.lib" "vtkRenderingVolumeOpenGL2-7.0-gd.lib" "vtksqlite-7.0-gd.lib" "vtksys-7.0-gd.lib" "vtktiff-7.0-gd.lib" "vtkverdict-7.0-gd.lib" "vtkViewsContext2D-7.0-gd.lib" "vtkViewsCore-7.0-gd.lib" "vtkViewsInfovis-7.0-gd.lib" "vtkzlib-7.0-gd.lib" "vtkGUISupportQt-7.0-gd.lib" "vtkRenderingQt-7.0-gd.lib" "vtkViewsQt-7.0-gd.lib" "flann_cpp_s-gd.lib" "qhullstatic-gd.lib" OpenNI2.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib comctl32.lib wsock32.lib glu32.lib opengl32.lib ws2_32.lib Psapi.lib opencv_calib3d2411d.lib opencv_contrib2411d.lib opencv_core2411d.lib opencv_features2d2411d.lib opencv_flann2411d.lib opencv_gpu2411d.lib opencv_highgui2411d.lib opencv_imgproc2411d.lib opencv_legacy2411d.lib opencv_ml2411d.lib opencv_nonfree2411d.lib opencv_objdetect2411d.lib opencv_ocl2411d.lib opencv_photo2411d.lib opencv_stitching2411d.lib opencv_superres2411d.lib opencv_video2411d.lib opencv_videostab2411d.lib halconcpp.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:\Users\Administrator\Desktop\DisplayMessage\x64\Debug\DisplayMessage.pdb" /SUBSYSTEM:WINDOWS /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:\Users\Administrator\Desktop\DisplayMessage\x64\Debug\DisplayMessage.lib" /MACHINE:X64 x64\Debug\myIco.res
         x64\Debug\displaymessage.obj
         x64\Debug\moc_displaymessage.obj
         x64\Debug\qrc_displaymessage.obj
         x64\Debug\main.obj
         DisplayMessage.vcxproj -> C:\Users\Administrator\Desktop\DisplayMessage\x64\Debug\DisplayMessage.exe
     1>已完成生成项目“C:\Users\Administrator\Desktop\DisplayMessage\DisplayMessage\DisplayMessage.vcxproj”(Build 个目标)的操作。

生成成功。

已用时间 00:01:19.95
